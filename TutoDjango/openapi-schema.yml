openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /monApp/api/categories/:
    get:
      operationId: listCategorieSerializerLists
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategorieList'
          description: ''
      tags:
      - monApp
    post:
      operationId: createCategorieSerializerList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorieList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorieList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieList'
          description: ''
      tags:
      - monApp
  /monApp/api/categories/{id}/:
    get:
      operationId: retrieveCategorie
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Categorie'
          description: ''
      tags:
      - monApp
    put:
      operationId: updateCategorieSerializerList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorieList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorieList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieList'
          description: ''
      tags:
      - monApp
    patch:
      operationId: partialUpdateCategorieSerializerList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorieList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorieList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorieList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorieList'
          description: ''
      tags:
      - monApp
    delete:
      operationId: destroyCategorieSerializerList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - monApp
  /monApp/api/produits/:
    get:
      operationId: listProduits
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Produit'
          description: ''
      tags:
      - monApp
    post:
      operationId: createProduit
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Produit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Produit'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produit'
          description: ''
      tags:
      - monApp
  /monApp/api/produits/{id}/:
    get:
      operationId: retrieveProduit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produit'
          description: ''
      tags:
      - monApp
    put:
      operationId: updateProduit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Produit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Produit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produit'
          description: ''
      tags:
      - monApp
    patch:
      operationId: partialUpdateProduit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Produit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Produit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Produit'
          description: ''
      tags:
      - monApp
    delete:
      operationId: destroyProduit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - monApp
  /monApp/api/rayons/:
    get:
      operationId: listRayons
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Rayon'
          description: ''
      tags:
      - monApp
  /monApp/api/rayons/{idRayon}/:
    get:
      operationId: retrieveRayon
      description: ''
      parameters:
      - name: idRayon
        in: path
        required: true
        description: A unique integer value identifying this rayon.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rayon'
          description: ''
      tags:
      - monApp
  /monApp/api/statuts/:
    get:
      operationId: listStatusSerializerLists
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusList'
          description: ''
      tags:
      - monApp
    post:
      operationId: createStatusSerializerList
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusList'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusList'
          description: ''
      tags:
      - monApp
  /monApp/api/statuts/{id}/:
    get:
      operationId: retrieveStatus
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
          description: ''
      tags:
      - monApp
    put:
      operationId: updateStatusSerializerList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusList'
          description: ''
      tags:
      - monApp
    patch:
      operationId: partialUpdateStatusSerializerList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatusList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatusList'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusList'
          description: ''
      tags:
      - monApp
    delete:
      operationId: destroyStatusSerializerList
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - monApp
  /monApp/api/contenir/:
    get:
      operationId: listContenirs
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contenir'
          description: ''
      tags:
      - monApp
    post:
      operationId: createContenir
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contenir'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contenir'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contenir'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contenir'
          description: ''
      tags:
      - monApp
  /monApp/api/contenir/{id}/:
    get:
      operationId: retrieveContenir
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contenir.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contenir'
          description: ''
      tags:
      - monApp
    put:
      operationId: updateContenir
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contenir.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contenir'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contenir'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contenir'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contenir'
          description: ''
      tags:
      - monApp
    patch:
      operationId: partialUpdateContenir
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contenir.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contenir'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contenir'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contenir'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contenir'
          description: ''
      tags:
      - monApp
    delete:
      operationId: destroyContenir
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this contenir.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - monApp
  /monApp/api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - monApp
  /monApp/api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - monApp
components:
  schemas:
    CategorieList:
      type: object
      properties:
        idCat:
          type: integer
          readOnly: true
        nomCat:
          type: string
          maxLength: 100
      required:
      - nomCat
    Categorie:
      type: object
      properties:
        idCat:
          type: integer
          readOnly: true
        nomCat:
          type: string
          maxLength: 100
        produits_categorie:
          type: string
          readOnly: true
      required:
      - nomCat
    Produit:
      type: object
      properties:
        refProd:
          type: integer
          readOnly: true
        intituleProd:
          type: string
          maxLength: 200
        prixUnitaireProd:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        dateFabProd:
          type: string
          format: date
        categorie:
          type: integer
          nullable: true
      required:
      - intituleProd
      - prixUnitaireProd
    Rayon:
      type: object
      properties:
        idRayon:
          type: integer
          readOnly: true
        nomRayon:
          type: string
          maxLength: 100
      required:
      - nomRayon
    StatusList:
      type: object
      properties:
        idStatus:
          type: integer
          readOnly: true
        libelleStatus:
          type: string
          maxLength: 100
      required:
      - libelleStatus
    Status:
      type: object
      properties:
        idStatus:
          type: integer
          readOnly: true
        libelleStatus:
          type: string
          maxLength: 100
        produits_status:
          type: string
          readOnly: true
      required:
      - libelleStatus
    Contenir:
      type: object
      properties:
        produit:
          type: integer
        rayon:
          type: integer
        Qte:
          type: integer
          maximum: 9223372036854775807
          format: int64
          minimum: 0
      required:
      - produit
      - rayon
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
